#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>

// Function executed by Thread 1
void* threadFunc1(void* arg) {
    for (int i = 0; i < 5; i++) {
        printf("Thread 1 is running: %d\n", i);
        sleep(1); // Simulate work
    }
    return NULL;
}

// Function executed by Thread 2
void* threadFunc2(void* arg) {
    for (int i = 0; i < 5; i++) {
        printf("Thread 2 is running: %d\n", i);
        sleep(1); // Simulate work
    }
    return NULL;
}

int main() {
    pthread_t t1, t2;

    // Create threads
    pthread_create(&t1, NULL, threadFunc1, NULL);
    pthread_create(&t2, NULL, threadFunc2, NULL);

    // Wait for threads to finish
    pthread_join(t1, NULL);
    pthread_join(t2, NULL);

    printf("Both threads have finished execution.\n");
    return 0;
}
